services:

  go-api:
    build:
      context: ./go-api
    container_name: api-go
    ports:
      - "8080:8080"

  java-api:
    build:
      context: java-api
    ports:
      - "8081:8080"
    container_name: api-java
    environment:
      - POSTGRES_HOST=postgres-java
    depends_on:
      - postgres-java 

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"

  # grafana:
  #   image: grafana/grafana-oss:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - prometheus
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_SECURITY_ADMIN_USER=admin
  #   volumes:
  #     - grafana-data:/var/lib/grafana

  postgres-go:
    image: postgres:latest
    container_name: postgres-go
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - ./postgres_data:/var/lib/postgresql/data
  
  postgres-java:
    image: postgres:latest
    container_name: postgres-java
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - ./postgres_data:/var/lib/postgresql/data


volumes:
  grafana-data: